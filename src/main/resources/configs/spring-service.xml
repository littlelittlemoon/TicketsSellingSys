<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--扫描service包(包含子包)下所有使用注解的类型-->
    <context:component-scan base-package="org.web.ssm"/>

    <!--配置事务管理器(mybatis采用的是JDBC的事务管理器)-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置基于注解的声明式事务,默认使用注解来管理事务行为-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <!--配置事务的通知（事务的增强）-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--
            propagation: 事务传播行为
            isolation:   事务的隔离
            read-only:   只读
            rollback-for: 发生哪些异常回滚
            no-rollback-for:  发生哪些异常不回滚
            -->
            <!--REQUIRED表示支持当前事务，如果不存在就新建一个,并且一有异常就回滚-->
            <tx:method name="insert*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Throwable"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" rollback-for="java.lang.Throwable"/>
            <!--select开头的方法，只读提高性能-->
            <tx:method name="get*" read-only="true"/>
            <!--其他方法使用默认的事务管理-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--配置aop切面-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="serviceMethods" expression="execution(* org.web.ssm.service..*.*(..))"/>
        <!--配置切面-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>
</beans>